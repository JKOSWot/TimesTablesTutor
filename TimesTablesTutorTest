package mathsGUI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Random;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.Timer;

import model.Main;
import model.StringToNumber;

@SuppressWarnings("serial")
public class TimesTablesTutorTest extends JFrame {

	private static JButton checkButton = new JButton("Confirm");
	private static JLabel questionLabel = new JLabel();
	private static JPanel panel1 = new JPanel();
	private static JPanel panel2 = new JPanel();
	private static JPanel panel3 = new JPanel();
	private static JTextField answerField = new JTextField(null, JTextField.CENTER);
	private GridBagLayout defaultLayout = new GridBagLayout();

	public int[] gameNumber = new int[] {1,2,3,4};
	public int count = 0;
	public int correctAnswer = 0;
	public int correctCount = 0;
	public int incorrectCount = 0;
	private Main voiceMain;

	/*
	 * constructor method
	 */
	public TimesTablesTutorTest() {
		voiceMain = new Main();
		javax.swing.SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				prepareGUI();
			}
		});
	}

	/*
	 * Main method
	 */
	public static void main(String[] args) {
		new TimesTablesTutorTest();
	}

	/*
	 * prepareGUI is the method that determines
	 * the GUI layout for the JFrame and 
	 * calls other GUI methods
	 */
	public void prepareGUI() {
		setSize(700,400);
		setTitle("Times Tables Tutor");
		setResizable(false);
		setLocationRelativeTo(null);
		setLayout(new GridLayout(3, 1));

		addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent windowEvent){
				System.exit(0);
			}        
		}); 

		/*
		 * calling GUI methods
		 */
		panelSetup();
		nextQuestion();
		setupCheckButton();
		setVisible(true);
		JOptionPane.showMessageDialog(null, "Say your answers out loud then press the button to confirm them!");

		/*
		 * Timer to determine whether or not the JTextField
		 * contains anything, if it does contain something
		 * the loop will re-run and reset the timer
		 */
		Timer timer = new Timer(100, new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String speech = voiceMain.getResult();
				if (speech != null && !speech.equals("<unk>")) {
					answerField.setText(Integer.toString(StringToNumber.convert(speech)));
				}
			}
		});
		timer.start();
	}

	public void panelSetup() {
		panel1.setBackground(new Color(181,192,254));
		panel2.setBackground(new Color(172,184,254));
		panel3.setBackground(new Color(164,177,254));

		labelSetup();
		textFieldSetup();
		buttonSetup();
	}

	public void labelSetup() {
		add(panel1);
		panel1.setLayout(defaultLayout);
		panel1.add(questionLabel);
		panel1.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
		questionLabel.setFont(new Font("Arial", Font.PLAIN, 24));
	}

	public void textFieldSetup() {
		add(panel2);
		panel2.setLayout(defaultLayout);
		panel2.add(answerField);
		panel2.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
		answerField.setHorizontalAlignment(JTextField.CENTER);
		answerField.setPreferredSize(new Dimension(200, 50));
		answerField.setFont(new Font("Arial", Font.PLAIN, 20));
	}

	public void buttonSetup() {
		add(panel3);
		panel3.setLayout(defaultLayout);
		panel3.add(checkButton);
		panel3.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
		checkButton.setPreferredSize(new Dimension(125, 50));
		checkButton.setFont(new Font("Arial", Font.PLAIN, 20));
	}

	/*
	 * this method generates the multiplication
	 * question which is displayed in the JFrame
	 * which the user has to answer
	 */
	public void nextQuestion() {
		int randomNumber1 = new Random().nextInt(gameNumber.length);
		int randomNumber2 = new Random().nextInt(gameNumber.length);
		correctAnswer = randomNumber1 * randomNumber2;

		questionLabel.setText(randomNumber1 + " x " + randomNumber2);
	}

	/*
	 * setting up the checkButton to determine if
	 * the answer entered into the JTextField
	 * is correct
	 */
	public void setupCheckButton() {
		checkButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					if (Integer.parseInt(answerField.getText()) == correctAnswer) {
						count++;
						correctCount++;
						//JOptionPane.showMessageDialog(null, "Correct");
					} else {
						count++;
						incorrectCount++;
						//JOptionPane.showMessageDialog(null, "Incorrect!");
					}
					if (count <= 9) {
						nextQuestion();
					} else {
						JOptionPane.showMessageDialog(null, "Finished.");
						new TimesTablesTutorResults(correctCount, incorrectCount);
						setVisible(false);
					}
				} catch (NumberFormatException f) {
					JOptionPane.showMessageDialog(null, "That's not a number!");
				}
			}
		});
	}
}
